- name: install guestfs
  package:
    name: libguestfs-tools
    state: present

- name: image management on non-RHEL system
  tags:
    - baremetal
    - overcloud-images
  when:
    - base_image != 'rhel'
  block:
    - name: fetch images
      get_url:
        dest: "/home/stack/overcloud_imgs/{{item.file}}"
        group: stack
        mode: 0644
        owner: stack
        url: "https://images.rdoproject.org/{{tripleo_version}}/rdo_trunk/current-tripleo/{{item.file}}"
      retries: 10
      delay: 5
      loop: "{{ overcloud_images }}"
      loop_control:
        label: "{{item.file}}"
    - name: run commands as stack user
      become: yes
      become_user: stack
      tags:
        - baremetal
        - overcloud-images
      block:
        - name: uncompress images
          unarchive:
            creates: "/home/stack/overcloud_imgs/{{item.content}}"
            dest: "/home/stack/overcloud_imgs/"
            remote_src: yes
            src: "/home/stack/overcloud_imgs/{{item.file}}"
          loop: "{{ overcloud_images }}"
          loop_control:
            label: "{{item.file}}"

- name: manage image on RHEL
  tags:
    - baremetal
    - overcloud-images
  when:
    - base_image == 'rhel'
  block:
    - name: install package
      package:
        name: rhosp-director-images
        state: installed
    - name: run commands as stack user
      become: yes
      become_user: stack
      tags:
        - baremetal
        - overcloud-images
      block:
        - name: uncompress images
          unarchive:
            creates: "/home/stack/overcloud_imgs/{{item.content}}"
            dest: "/home/stack/overcloud_imgs/"
            remote_src: yes
            src: "/usr/share/rhosp-director-images/{{item.file}}"
          loop: "{{ overcloud_images }}"
          loop_control:
            label: "{{item.file}}"
- name: common tag
  tags:
    - overcloud-images
    - baremetal
  block:
    - name: run commands as stack user
      become: yes
      become_user: stack
      block:
        - name: modify overcloud image
          shell: |
            virt-sysprep -a /home/stack/overcloud_imgs/overcloud-full.qcow2 \
              --copy-in /etc/yum.conf:/etc/ \
              {% if base_image == 'rhel' %}
              --firstboot-command 'yum install -y {{ rhos_release_repo_url }}/rhos-release-latest.noarch.rpm'
              --firstboot-command 'rhos-release {{ rhos_release_opts|default('') }} {{ rhos_release_version }}'
              {% else %}
              --copy-in /etc/yum.repos.d/:/etc/ \
              {% endif %}
              --network \
              && \
              touch /home/stack/overcloud_imgs/overcloud-full.qcow2.done
          args:
            creates: /home/stack/overcloud_imgs/overcloud-full.qcow2.done
        - name: update overcloud image
          when: overcloud_image_update|bool
          shell: |
              virt-customize -a /home/stack/overcloud_imgs/overcloud-full.qcow2 \
                --update \
                --selinux-relabel \
                --network \
              && \
              touch /home/stack/overcloud_imgs/overcloud-full.qcow2.updated
          args:
            creates: /home/stack/overcloud_imgs/overcloud-full.qcow2.updated
        - name: upload images to glance (container)
          when:
            - containerized_undercloud|bool
          shell: |
            source ~/stackrc
            openstack overcloud image upload \
              --image-path /home/stack/overcloud_imgs \
              --http-boot /var/lib/ironic/httpboot \
              --update-existing
        - name: upload images to glance (bm)
          when:
            - not containerized_undercloud|bool
          shell: |
            source ~/stackrc
            openstack overcloud image upload \
              --image-path /home/stack/overcloud_imgs \
              --update-existing
        - name: common condition and tags
          tags:
            - baremetal
            - overcloud
          block:
            - name: check overcloud node import status
              shell: |
                source ~/stackrc
                openstack baremetal node list -f value -c UUID | wc -l
              register: known_bm
            - name: debug value
              debug:
                msg: "Got {{known_bm.stdout}} instances"
            - name: import nodes in ironic
              when:
                - known_bm.stdout == "0"
              shell: |
                source ~/stackrc
                openstack overcloud node import \
                  --provide \
                  ~/baremetal.json 2>&1 > ~/import-nodes.log
            - name: update the ctlplane-subnet dns server
              shell: |
                source ~/stackrc
                openstack subnet show ctlplane-subnet -f json | jq '.dns_nameservers' | grep "{{ undercloud_dns }}" ||
                openstack subnet set ctlplane-subnet --dns-nameserver {{ undercloud_dns }}
            - name: deploy the overcloud
              shell: |
                bash /home/stack/deploy-overcloud.sh
              when: deploy_overcloud|bool
