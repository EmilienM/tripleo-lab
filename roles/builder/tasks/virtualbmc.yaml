- name: common tags
  tags:
    - vbmc
    - lab
    - builder-bootstrap
  block:

    - name: push vbmcd unit
      when:
        - ansible_facts['python_version'] is version('3.0', 'gt', strict=False)
      copy:
        src: vbmcd.service
        dest: /etc/systemd/system/virtualbmc.service
        mode: 0644

    - name: create vbmcd user
      when:
        - ansible_facts['python_version'] is version('3.0', 'gt', strict=False)
      user:
        comment: VirtualBMC Daemon user
        create_home: true
        home: /var/lib/vbmcd
        name: vbmcd
        system: true

    - name: authorize vbmcd on libvirt
      when:
        - ansible_facts['python_version'] is version('3.0', 'gt', strict=False)
      copy:
        dest: /etc/polkit-1/rules.d/60-vbmcd.rules
        src: vbmc-polkit.rules
        group: root
        mode: 0644
        owner: root
        serole: object_r
        setype: etc_t
        seuser: system_u

    - name: start virtualbmc
      service:
        daemon_reload: true
        name: virtualbmc.service
        enabled: true
        state: started

    - name: get all defined VMs
      virt:
        command: list_vms
      register: list_vms

    - name: Create the Virtual BMCs
      when: item.0.name is not match('^undercloud')
      command: "vbmc add {{vm_prefix}}-oc{{ item.1 }}-{{ item.0.name }} --port {{ '%s-%s-oc-%s'|format(vm_prefix, item.1, item.0.name)|hashed_port }} --libvirt-uri qemu:///system --username ADMIN --password ADMIN"
      args:
        creates: "/var/lib/vbmcd/.vbmc/{{vm_prefix}}-oc{{ item.1 }}-{{ item.0.name }}/config"
      loop: "{{ vms|product(overclouds_range)|list }}"
      loop_control:
        label: "oc{{ item.1 }}-{{ item.0.name }}"
        index_var: vm_idx
      register: vbmc
      ignore_errors: true

    - name: Start the Virtual BMCs (virtualbmc >= 1.4.0+)
      command: "vbmc start {{vm_prefix}}-oc{{ item.1 }}-{{ item.0.name }}"
      loop: "{{ vms|product(overclouds_range)|list }}"
      loop_control:
        label: "oc{{ item.1 }}-{{ item.0.name }}"
      ignore_errors: true
      when:
        - vbmc.changed
        - item.0.name is not match('^undercloud')

    - name: open firewall on libvirt link
      iptables:
        action: insert
        chain: INPUT
        comment: "allow vbmc access from undercloud"
        destination: "192.168.122.1"
        jump: ACCEPT
        protocol: udp
